<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YYs+vjJJHimFY5kucUUIpCKKKEx//9k=
</value>
  </data>
</root>